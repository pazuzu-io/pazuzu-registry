swagger: '2.0'
info:
  title: Pazuzu Registry
  description: A feature registry for customized Docker images
  version: "0.0.6"
# host: pazuzu.zalando.net
host: localhost:8080
basePath: /api
schemes:
  - http
produces:
  - application/json
paths:
  /dependencies:
    get:
      description: Returns the list of features topologically sorted based on the dependencies.
      tags:
        - Features
      parameters:
        - name: names
          in: query
          description: The exact names of the features the call should return.
          required: true
          type: array
          maxItems: 128
          items:
            type: string
      responses:
        200:
          description: The request was successful.
          schema:
            $ref: '#/definitions/DependenciesList'
        default:
          description: An unexpected error occurred.
          schema:
            $ref: '#/definitions/Error'
  /features:
    get:
      description: Returns all features sorted by name.
      tags:
        - Features
      parameters:
        - name: q
          in: query
          description: A part of the name of features to return.
          required: false
          type: string
        - name: author
          in: query
          description: The name of the author of features to return.
          required: false
          type: string
        - name: fields
          in: query
          description: The JSON fields present in the response.
          required: false
          type: string
        - name: status
          in: query
          description: The status of features to return.
          required: false
          default: approved
          type: string
          enum:
          - approved
          - pending
          - declined
        - name: offset
          in: query
          description: The offset to start from.
          required: false
          type: integer
        - name: limit
          in: query
          description: The maximum number of features to return.
          required: false
          default: 50
          maximum: 1000
          type: integer
      responses:
        200:
          description: The request was successful.
          schema:
            $ref: '#/definitions/FeatureList'
        default:
          description: An unexpected error occurred.
          schema:
            $ref: '#/definitions/Error'
    post:
      description: |
        Creates a new feature with specified name, docker data, etc.
        The name of the featureFeature name is checked to be unique.
        The `status`, `author` and `created_at` fields of the feature's `meta` property must not be set.
      tags:
        - Features
      parameters:
        - name: feature
          required: true
          in: body
          schema:
            $ref: '#/definitions/Feature'
      consumes:
        - application/json
      responses:
        201:
          description: The feature has been created successfully.
          schema:
            $ref: '#/definitions/Feature'
        default:
          description: An unexpected error occurred.
          schema:
            $ref: '#/definitions/Error'
  /features/{name}:
    parameters:
    - name: name
      in: path
      description: The feature name.
      required: true
      type: string
    get:
      description: Returns a single feature without its dependencies.
      tags:
        - Features
      responses:
        200:
          description: The request was successful.
          schema:
            $ref: '#/definitions/Feature'
        default:
          description: An unexpected error occurred.
          schema:
            $ref: '#/definitions/Error'
  /features/{name}/reviews:
    post:
      description: Creates a new review (approval or decline) for a feature.
      tags:
        - Features
      parameters:
        - name: name
          in: path
          description: The feature name.
          required: true
          type: string
        - name: review
          required: true
          in: body
          schema:
            $ref: '#/definitions/Review'
      consumes:
        - application/json
      responses:
        201:
          description: The review has been created successfully.
          schema:
            $ref: '#/definitions/Review'
        default:
          description: An unexpected error occurred.
          schema:
            $ref: '#/definitions/Error'
definitions:
  FeatureMeta:
    type: object
    properties:
      name:
        type: string
        description: A unique identifier representing a specific feature.
      description:
        type: string
        description: A description of the feature.
      author:
        type: string
        description: The name of the feature's author.
      status:
        type: string
        description: The status of the feature.
        enum:
        - approved
        - declined
        - pending
      updated_at:
        type: string
        description: The last update date in ISO 8601 format.
      created_at:
        type: string
        description: The creation date in ISO 8601 format.
      dependencies:
        type: array
        items:
          type: string
        description: An array of feature names.
  Feature:
    type: object
    properties:
      meta:
        $ref: '#/definitions/FeatureMeta'
      snippet:
        type: string
        description: The Dockerfile part to be used with that feature.
      test_snippet:
        type: string
        description: How to test that the feature is working.
  FeatureList:
    type: object
    properties:
      total_count:
        type: integer
        description: The total number of features.
      features:
        type: array
        items:
          $ref: '#/definitions/Feature'
      _links:
        type: object
        properties:
          prev:
            $ref: '#/definitions/Link'
          next:
            $ref: '#/definitions/Link'
  Review:
    type: object
    properties:
      review_status:
        type: string
        description: The status of the review.
        enum:
        - approved
        - declined
  DependenciesList:
    type: object
    properties:
      requested_features:
        description: A list of feature name for which dependencies have been requested.
        type: array
        items:
          type: string
      dependencies:
        description: A topologically sorted list of features resulting from the dependencies resolution.
        type: array
        items:
          $ref: '#/definitions/Feature'
  Link:
    type: object
    properties:
      href:
        type: string
        description: The URL of the link.
  Error:
    type: object
    properties:
      code:
        type: string
      message:
        type: string
      detailed_message:
        type: string
