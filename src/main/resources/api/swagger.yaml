swagger: '2.0'
info:
  title: Pazuzu registry
  description: Generating Dockerfiles by sets of required functions.
  version: "0.0.6"
host: pazuzu.zalando.net
basePath: /api
schemes:
  - http
produces:
  - application/json
paths:
  /dependencies:
    get:
      summary: Topologicaly sorted list of features.
      description: |
        Returns the list of features topologicaly sorted base on the dependencies base on list of top features.
      tags:
        - Features
      parameters:
        - name: names
          in: query
          description: Exact names of the features the call should return.
          required: true
          type: array
          maxItems: 128
          items:
            type: string
      responses:
        200:
          description: A list of features.
          schema:
            $ref: '#/definitions/DependenciesList'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/Error'
  /features:
    get:
      summary: Get features.
      description: Returns the features sorted by name.
      tags:
        - Features
      parameters:
        - name: q
          in: query
          description: Part of the name of the features the call should return.
          required: false
          type: string
        - name: author
          in: query
          description: Name of the author of the returned features.
          required: false
          type: string
        - name: fields
          in: query
          description: The fields present in the response (JSON Field).
          required: false
          type: string
        - name: offset
          in: query
          description: The offset to start from.
          required: false
          type: integer
        - name: limit
          in: query
          description: Maximum number of features to return.
          required: false
          default: 50
          maximum: 1000
          type: integer
      responses:
        200:
          description: A list of features.
          schema:
            $ref: '#/definitions/FeatureList'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/Error'
  /features/{name}:
    parameters:
    - name: name
      in: path
      description: The feature name.
      required: true
      type: string
    get:
      summary: Get single feature.
      description: Returns all the feature data without its dependencies.
      tags:
        - Features
      responses:
        200:
          description: A single feature.
          schema:
            $ref: '#/definitions/Feature'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/Error'
  /pending-features:
    get:
      summary: Get pending features.
      description: Returns the features sorted by name (only status = pending).
      tags:
        - Features
      parameters:
        - name: q
          in: query
          description: Part of the name of the features the call should return.
          required: false
          type: string
        - name: author
          in: query
          description: Name of the author of the returned features.
          required: false
          type: string
        - name: fields
          in: query
          description: The fields present in the response (JSON Field).
          required: false
          type: string
        - name: offset
          in: query
          description: The offset to start from.
          required: false
          type: integer
        - name: limit
          in: query
          description: Maximum number of features to return.
          required: false
          default: 50
          maximum: 1000
          type: integer
      responses:
        200:
          description: A list of features.
          schema:
            $ref: '#/definitions/FeatureList'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/Error'
    post:
      summary: Creates a new pending feature.
      description: Creates a new feature with specified name, docker data, etc. Feature name is checked to be unique. The status will be pending.
      tags:
        - Features
      parameters:
        - name: feature
          required: true
          in: body
          schema:
            $ref: '#/definitions/Feature'
      consumes:
        - application/json
      responses:
        201:
          description: Feature successfully created.
          schema:
            $ref: '#/definitions/Feature'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/Error'
  /declined-features:
    get:
      summary: Get declined features.
      description: Returns the features sorted by name (only status = declined).
      tags:
        - Features
      parameters:
        - name: q
          in: query
          description: Part of the name of the features the call should return.
          required: false
          type: string
        - name: author
          in: query
          description: Name of the author of the returned features.
          required: false
          type: string
        - name: fields
          in: query
          description: The fields present in the response (JSON Field).
          required: false
          type: string
        - name: offset
          in: query
          description: The offset to start from.
          required: false
          type: integer
        - name: limit
          in: query
          description: Maximum number of features to return.
          required: false
          default: 50
          maximum: 1000
          type: integer
      responses:
        200:
          description: A list of features.
          schema:
            $ref: '#/definitions/FeatureList'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/Error'
    post:
      summary: Declines an pending feature.
      description: Changes the status of this feature to declined.
      tags:
        - Features
      parameters:
        - name: feature
          required: true
          in: body
          schema:
            $ref: '#/definitions/Feature'
      consumes:
        - application/json
      responses:
        201:
          description: Feature successfully created.
          schema:
            $ref: '#/definitions/Feature'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/Error'
  /approved-features:
    get:
      summary: Get approved features.
      description: Returns the features sorted by name (only status = approved).
      tags:
        - Features
      parameters:
        - name: q
          in: query
          description: Part of the name of the features the call should return.
          required: false
          type: string
        - name: author
          in: query
          description: Name of the author of the returned features.
          required: false
          type: string
        - name: fields
          in: query
          description: The fields present in the response (JSON Field).
          required: false
          type: string
        - name: offset
          in: query
          description: The offset to start from.
          required: false
          type: integer
        - name: limit
          in: query
          description: Maximum number of features to return.
          required: false
          default: 50
          maximum: 1000
          type: integer
      responses:
        200:
          description: A list of features.
          schema:
            $ref: '#/definitions/FeatureList'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/Error'
    post:
      summary: Approves an Existing feature.
      description: Changes the status of this pending feature to approved.
      tags:
        - Features
      parameters:
        - name: feature
          required: true
          in: body
          schema:
            $ref: '#/definitions/Feature'
      consumes:
        - application/json
      responses:
        201:
          description: Feature successfully created.
          schema:
            $ref: '#/definitions/Feature'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/Error'
definitions:
  FeatureMeta:
    type: object
    properties:
      name:
        type: string
        description: Unique identifier representing a specific feature.
      description:
        type: string
        description: Description of the feature.
      author:
        type: string
        description: Name of the feature author.
      status:
        type: string
        description: Status of the feature.
      updated_at:
        type: string
        description: Last update date in ISO 8601 format.
      created_at:
        type: string
        description: Creation date in ISO 8601 format.
      dependencies:
        type: array
        items:
          type: string
        description: Array of feature names.
  Feature:
    type: object
    properties:
      meta:
        $ref: '#/definitions/FeatureMeta'
      snippet:
        type: string
        description: Docker file part to be used with that feature.
      test_snippet:
        type: string
        description: How to test that feature is working.
  FeatureList:
    type: object
    properties:
      total_count:
        type: integer
        description: The total number of features.
      features:
        type: array
        items:
          $ref: '#/definitions/Feature'
      _links:
        type: object
        properties:
          prev:
            $ref: '#/definitions/Link'
          next:
            $ref: '#/definitions/Link'
  DependenciesList:
    type: object
    properties:
      requested_features:
        description: List of feature name for which dependencies have been requested.
        type: array
        items:
          type: string
      depedencies:
        description: Topologicaly sorted list of features resulting of the dependencies resolution.
        type: array
        items:
          $ref: '#/definitions/Feature'
  Link:
    type: object
    properties:
      href:
        type: string
        description: The URL for the link.
  Error:
    type: object
    properties:
      code:
        type: string
      message:
        type: string
      detailed_message:
        type: string
