swagger: '2.0'
info:
  title: Pazuzu registry
  description: Generating Dockerfiles by sets of required functions
  version: "0.0.4"
host: pazuzu.zalando.net
schemes:
  - http
produces:
  - application/json
paths:
  /api/features:
    get:
      summary: Get features
      description: |
        Returns the features.
      tags:
        - Features
      parameters:
        - name: names
          in: query
          description: exact name of the feature the call should return.
          required: false
          type: array
          maxItems: 128
          items:
            type: string
        - name: resolve
          in: query
          description: flag triggering feature depedencies resolution. If set to true, names field is required.
          required: false
          default: false
          type: boolean
        - name: q
          in: query
          description: part of the name of the features the call should return. Mutually exclusive with names.
          required: false
          type: string
        - name: author
          in: query
          description: name of the author of the returned features. Mutually exclusive with names.
          required: false
          type: string
        - name: fields
          in: query
          description: the fields present in the response (JSON Field).
          required: false
          type: string
        - name: status
          in: query
          description: status of the features the call should return.
          required: false
          default: approved
          type: string
          enum:
            - approved
            - pending
            - declined
        - name: offset
          in: query
          description: the offset to start from.
          required: false
          type: integer
        - name: limit
          in: query
          description: maximum number of features to return.
          required: false
          default: 50
          maximum: 1000
          type: integer
      responses:
        200:
          description: An list of features
          schema:
            $ref: '#/definitions/FeatureList'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      summary: Creates a new feature
      description: |
        Creates a new feature with specified name, docker data, etc. Feature
        name is checked to be unique.
      tags:
        - Features
      parameters:
        - name: feature
          required: true
          in: body
          schema:
            $ref: '#/definitions/Feature'
      consumes:
        - application/json
      responses:
        201:
          description: Feature successfully created
          schema:
            $ref: '#/definitions/Feature'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /api/features/{name}:
    parameters:
    - name: name
      in: path
      description: the feature name.
      required: true
      type: string
    get:
      summary: Get single feature
      description: |
        Returns all the feature data without its dependencies.
      tags:
        - Features
      responses:
        200:
          description: a single feature
          schema:
            $ref: '#/definitions/Feature'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    put:
      summary: Replace this feature's content
      description: |
        Replaces snippet, test_snippet and meta data for this feature.
      tags:
        - Features
      parameters:
        - name: feature
          required: true
          in: body
          schema:
            $ref: '#/definitions/Feature'
      consumes:
        - application/json
      responses:
        200:
          description: Feature successfully updated
          schema:
            $ref: "#/definitions/Feature"
        default:
          description: Unexpected exception
          schema:
            $ref: "#/definitions/Error"
    delete:
      summary: Delete feature
      description: |
        Delete this feature. If another feature depends on this feature
        nothing will be deleted and an error will be returned.
      tags:
        - Features
      responses:
        204:
          description: Feature successfully deleted
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
definitions:
  FeatureMeta:
    type: object
    properties:
      name:
        type: string
        description: Unique identifier representing a specific feature.
      description:
        type: string
        description: Description of the feature
      author:
        type: string
        description: Name of the feature author
      status:
        type: string
        description: Status of the feature.
      updated_at:
        type: string
        description: Last update date in ISO 8601 format
      created_at:
        type: string
        description: Creation date in ISO 8601 format
      dependencies:
        type: array
        items:
          type: string
        description: array of feature names
  Feature:
    type: object
    properties:
      meta:
        $ref: '#/definitions/FeatureMeta'
      snippet:
        type: string
        description: Docker file part to be used with that feature.
      test_snippet:
        type: string
        description: how to test that feature is working
  FeatureList:
    type: object
    properties:
      features:
        type: array
        items:
          $ref: '#/definitions/Feature'
      _links:
        type: object
        properties:
          previous:
            $ref: '#/definitions/Link'
          next:
            $ref: '#/definitions/Link'
  Link:
    type: object
    properties:
      href:
        type: string
        description: url
  Error:
    type: object
    properties:
      code:
        type: string
      message:
        type: string
      detailed_message:
        type: string
